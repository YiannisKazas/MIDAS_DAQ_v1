NOTE "CREATOR" "Designer Version: 11.8.2.4";
NOTE "CAPTURE" "11.8.2.4";
NOTE "DEVICE" "AGLN020V5";
NOTE "PACKAGE" "AGLN020V5-qn68";
NOTE "DATE" "2017/11/29";
NOTE "TIME" "14:31:56";
NOTE "STAPL_VERSION" "JESD71";
NOTE "VENDOR" "Microsemi Corporation";
NOTE "IDCODE" "069081CF";
NOTE "IDMASK" "07FFFFFF";
NOTE "DESIGN" "MARS_MB_rev1_top";
NOTE "DESIGN_DIRECTORY" "C:\Users\johnk\OneDrive\NCSR_Demokritos\ESA\MARS_DAQ\Firmware_MB_FPGA\designer\impl1\";
NOTE "CHECKSUM" "F1D2";
NOTE "SECURITY" "Disable";
NOTE "ALG_VERSION" "20";
NOTE "MAP_VERSION" "1";
NOTE "TOOL_VERSION" "1";
NOTE "MAX_FREQ" "20000000";
NOTE "SILSIG" "00000000";
NOTE "SPEED_GRAD" "STD";
NOTE "TEMP_GRAD" "COM";
NOTE "PLAYER_VERSION_VARIABLE" "PLAYERVERSIONVARIABLE";
NOTE "PLAYER_VERSION_SW_VARIABLE" "PLAYERVERSIONSWVARIABLE";

ACTION DISABLE_FPGA_ARRAY = 
       VERIFY_IDCODE,
       W_INITIALIZE,
       DISABLE_RLOCK_AND_VERIFY,
       DO_EXIT;
ACTION PROGRAM = 
       VERIFY_IDCODE,
       SET_PRG_ARRAY,
       W_INITIALIZE,
       DISABLE_RLOCK_AND_VERIFY,
       DO_ERASE,
       DO_PROGRAM,
       DO_VERIFY_BOL,
       DO_PROGRAM_RLOCK,
       DO_VERIFY_PGM_RLOCK,
       DO_EXIT;
ACTION DISABLE_FPGA_ARRAY_PROGRAM = 
       VERIFY_IDCODE,
       SET_PRG_ARRAY,
       W_INITIALIZE,
       DO_DISABLE_RLOCK,
       DO_VERIFY_DISABLE_RLOCK,
       DO_ERASE,
       DO_PROGRAM,
       DO_VERIFY_BOL,
       DO_PROGRAM_RLOCK,
       DO_VERIFY_PGM_RLOCK,
       DO_EXIT;
ACTION PROGRAM_ARRAY = 
       VERIFY_IDCODE,
       SET_PRG_ARRAY,
       AW_INITIALIZE,
       DISABLE_RLOCK_AND_VERIFY,
       DO_ERASE_ARRAY,
       DO_PROGRAM,
       DO_VERIFY_BOL,
       DO_PROGRAM_RLOCK,
       DO_VERIFY_PGM_RLOCK,
       DO_EXIT;
ACTION ERASE_ARRAY = 
       VERIFY_IDCODE,
       AW_INITIALIZE,
       DISABLE_RLOCK_AND_VERIFY,
       DO_ERASE_ARRAY_ONLY,
       DO_EXIT;
ACTION ERASE = 
       VERIFY_IDCODE,
       W_INITIALIZE,
       DISABLE_RLOCK_AND_VERIFY,
       DO_ERASE_ONLY,
       DO_EXIT;
ACTION ERASE_ALL = 
       VERIFY_IDCODE,
       INITIALIZE,
       DISABLE_RLOCK_AND_VERIFY,
       DO_ERASE_ALL,
       DO_EXIT;
ACTION VERIFY = 
       VERIFY_IDCODE,
       R_INITIALIZE,
       DO_VERIFY_EOL,
       DO_VERIFY_RLOCK,
       DO_EXIT;
ACTION VERIFY_ARRAY = 
       VERIFY_IDCODE,
       AR_INITIALIZE,
       DO_VERIFY_EOL,
       DO_VERIFY_RLOCK,
       DO_EXIT;
ACTION READ_IDCODE = 
       DO_READ_IDCODE;
ACTION VERIFY_DEVICE_INFO = 
       VERIFY_IDCODE,
       READ_INITIALIZE,
       READ_IDCODE_ONLY,
       DO_VERIFY_DEVICE_INFO,
       DO_EXIT;
ACTION DEVICE_INFO = 
       VERIFY_IDCODE,
       READ_INITIALIZE,
       READ_IDCODE_ONLY,
       DO_DEVICE_INFO,
       DO_QUERY_SECURITY,
       DO_EXIT;



DATA CONSTBLOCK;
    INTEGER IEEE1532=0;
    INTEGER STAPL=1;
    INTEGER DIRECTC=2;
    INTEGER PDB=3;
    INTEGER SVF=4;
    INTEGER FP=0;
    INTEGER FPLITE=1;
    INTEGER FP3=2;
    INTEGER SCULPTW=3;
    INTEGER BPW=4;
    INTEGER DIRECTCP=5;
    INTEGER STP=6;
    INTEGER FP4=7;
    INTEGER FP5=8;
    INTEGER FP33=0;
    INTEGER FP34=1;
    INTEGER FP40=2;
    INTEGER FP41=3;
    INTEGER FP42=4;
    INTEGER FP50=5;
    INTEGER FP51=6;
    INTEGER FP60=7;
    INTEGER FP61=8;
    INTEGER FP62=9;
    INTEGER FP84=11;
    INTEGER FP85=12;
    INTEGER FP86=13;
    INTEGER FP90=14;
    INTEGER FP91=15;
    INTEGER FP100=16;
    INTEGER FP_11=19;
    INTEGER FP_11_1=20;
    INTEGER FP_11_2=21;
    INTEGER FP_11_3=22;
    INTEGER FP_11_4=23;
    INTEGER FP_11_5=24;
    INTEGER FP_11_6=25;
    INTEGER FP_11_7=26;
    INTEGER FP_11_8=27;
    INTEGER UNKNOWN=127;
    INTEGER UNSPECIFIED=0;
    INTEGER QN132=1;
    INTEGER VQ100=2;
    INTEGER TQ144=3;
    INTEGER PQ208=4;
    INTEGER FG144=5;
    INTEGER FG256=6;
    INTEGER FG484=7;
    INTEGER FG676=8;
    INTEGER FG896=9;
    INTEGER QN108=10;
    INTEGER QN180=11;
    INTEGER TQ100=12;
    INTEGER CQ208=13;
    INTEGER FG1152=14;
    INTEGER BG456=15;
    INTEGER UNDEFINED=63;
    INTEGER GRADE_UNSPEC=0;
    INTEGER GRADE_1=1;
    INTEGER GRADE_2=2;
    INTEGER GRADE_3=3;
    INTEGER GRADE_F=4;
    INTEGER GRADE_STD=5;
    INTEGER GRADE_4=6;
    INTEGER GRADE_UNDEF=7;
ENDDATA;

DATA PARAMETERS;
    INTEGER FREQ =4;
ENDDATA;

DATA GV;
    INTEGER ULOPT1_BITLOCATION =11;
    INTEGER ULOPT0_BITLOCATION =10;
    INTEGER ULUWE_BITLOCATION =9;
    INTEGER ULARE_BITLOCATION =8;
    INTEGER ULUPC_BITLOCATION =7;
    INTEGER ULUFE_BITLOCATION =6;
    INTEGER ULUFP_BITLOCATION =5;
    INTEGER ULUFJ_BITLOCATION =4;
    INTEGER ULFLR_BITLOCATION =3;
    INTEGER ULULR_BITLOCATION =2;
    INTEGER ULAWE_BITLOCATION =1;
    INTEGER ULARD_BITLOCATION =0;
    BOOLEAN BUFF128[128];
    BOOLEAN BUFF32[32];
    INTEGER I;
    INTEGER J;
    INTEGER TEMP;
    INTEGER SDNUMBER;
    INTEGER ROWNUMBER;
    INTEGER DATAINDEX =0;
    INTEGER FROMROWNUMBER =1;
    INTEGER AESBLOCK;
    BOOLEAN ID[32];
    BOOLEAN PASS = 1;
    BOOLEAN FADDR[3];
    INTEGER STATUS =0;
    BOOLEAN SILSIG[32] = $00000000;
    BOOLEAN ISC_CONFIG_RESULT[18];
    BOOLEAN VERIFYEOL[2];
    BOOLEAN COMBERASESELECT[23];
    BOOLEAN SECKEY_OK = 1;
    BOOLEAN SECREG[44];
    BOOLEAN ULUWE = 0;
    BOOLEAN ULARE = 0;
    BOOLEAN ULUPC = 0;
    BOOLEAN ULUFE = 0;
    BOOLEAN ULUFP = 0;
    BOOLEAN ULUFJ = 0;
    BOOLEAN ULFLR = 0;
    BOOLEAN ULULR = 0;
    BOOLEAN ULAWE = 0;
    BOOLEAN ULARD = 0;
    BOOLEAN ULOPT[2];
    BOOLEAN SUROWCHECKSUM[16];
    INTEGER SUROWCYCLECOUNT =0;
    INTEGER ACT_UROW_CYCLE_COUNT =0;
    BOOLEAN ACT_UROW_DESIGN_NAME[70] = $2cc14b97ed943f53d3;
    BOOLEAN SUROWDESIGNNAME[70];
    BOOLEAN SUROWPROGMETHOD[3];
    BOOLEAN ACT_UROW_ALGO_VERSION[7] = $14;
    BOOLEAN SUROWALGOVERSION[7];
    BOOLEAN SUROW_PKG_TYPE[6];
    BOOLEAN ACT_UROW_SW_VERSION[7];
    BOOLEAN SUROW_SW_VERSION[7];
    INTEGER PLAYERVERSIONVARIABLE =0;
    INTEGER PLAYERVERSIONSWVARIABLE =0;
    INTEGER SCULPTORMAJORBASE =5;
    INTEGER SCULPTORMINORBASE =16;
    BOOLEAN ACT_UROW_PROGRAM_SW[4];
    BOOLEAN SUROWPROGRAMSW[4];
    BOOLEAN SUROW_SPEED_GRADE[3];
    BOOLEAN SUROW_SRAM_DISTURB[1];
    BOOLEAN ISERASEONLY = 0;
    BOOLEAN ISRESTOREDESIGN = 0;
    BOOLEAN FLAGDISPLAYCYC = 1;
    BOOLEAN ISPRGARRAY = 0;
    BOOLEAN BSRPATTERN[351] = $4924924924924924924924924924924924924924924924924
        924924924924924924924924924924924924924;
    BOOLEAN SAMPLEMASK[351] = $0000000000000000000000000000000000000000000000000
        000000000000000000000000000000000000000;
    BOOLEAN BSR[351];
    BOOLEAN SAMPLE_DEVICE[351];
    BOOLEAN RLOCK[416] = $7fffffcffffffbfffffeffffffbfffffefffffffffffffffffff3f
        ffffcffffff3fffffcffffff3fffffdffffff3fffffdffffff;
    BOOLEAN ARRAYRONLY = 1;
    BOOLEAN CHKARRAY = 0;
    BOOLEAN FROMRONLY = 1;
    BOOLEAN CHKFROM = 0;
    BOOLEAN CHKNVM = 0;
    BOOLEAN CHKSEC = 1;
    BOOLEAN PERMLOCK = 0;
    INTEGER HEX[16] = 70,69,68,67,66,65,57,56,55,54,53,52,51,50,49,48;
    INTEGER NUMBEROFFROMROWS =8;
    BOOLEAN INITIALIZE_DATA[5] = $00;
    INTEGER SDTILE;
    INTEGER NUMBEROFSDTILES =2;
    INTEGER NUMBEROFMAPROWS =401;
    INTEGER IDREV;
    INTEGER IDFAB;
    INTEGER BM7DEVICE =0;
    INTEGER BM1DEVICE =0;
    BOOLEAN M1BUFF[128] = $acdd6548ccb488863e291eb18fe95077;
    BOOLEAN M7BUFF[128] = $e137623a2eeee91126015f3f73664945;
    BOOLEAN IDCODEVALUE[32] = $069081cf;
    BOOLEAN IDMASK[32] = $07ffffff;
    INTEGER SECKEYCHK =0;
    INTEGER DESIGNPKGTYPE =0;
    BOOLEAN ACT_UROW_PROG_METHOD[3] = $1;
    INTEGER LABEL_SEPARATOR =0;
    INTEGER ROWITERATION =100;
    INTEGER PAGEITERATION =100;
    INTEGER PERCENT_UPDATE;
    INTEGER DIFFERENCE;
    INTEGER UNIQUEEXITCODE =0;
ENDDATA;

DATA ECCCHECK;
    INTEGER SYNDROMETABLE[256] = -1,97,98,-1,99,-1,-1,100,101,-1,-1,31,-1,102,30
        ,-1,103,-1,-1,29,-1,28,27,-1,-1,26,25,-1,24,-1,-1,104,105,-1,-1,7,-1,6,5
        ,-1,
    -1,4,3,-1,2,-1,-1,106,-1,0,107,-1,1,-1,-1,108,109,-1,-1,110,-1,111,112,-1,86
        ,-1,-1,87,-1,88,89,-1,-1,90,47,-1,91,-1,-1,46,
    -1,92,45,-1,44,-1,-1,43,42,-1,-1,41,-1,40,93,-1,-1,64,55,-1,54,-1,-1,53,52,-1
        ,-1,51,-1,50,65,-1,48,-1,-1,66,-1,49,67,-1,
    -1,68,69,-1,70,-1,-1,-1,71,-1,-1,72,-1,73,74,-1,-1,75,63,-1,76,-1,-1,62,-1,77
        ,61,-1,60,-1,-1,59,58,-1,-1,57,-1,56,78,-1,
    -1,79,39,-1,38,-1,-1,37,36,-1,-1,35,-1,34,80,-1,32,-1,-1,81,-1,33,82,-1,-1,83
        ,84,-1,85,-1,-1,-1,-1,113,114,-1,115,-1,-1,116,
    117,-1,-1,15,-1,118,14,-1,119,-1,-1,13,-1,12,11,-1,-1,10,9,-1,8,-1,-1,-1,94,-1
        ,-1,23,-1,22,21,-1,-1,20,19,-1,18,-1,-1,-1,
    -1,16,95,-1,17,-1,-1,-1,96,-1,-1,-1,-1,-1,-1,-99;
    BOOLEAN ECCSTR0[120] = $ad2aadea7554eab4d1b4d14b2e4b2e;
    BOOLEAN ECCSTR1[120] = $eaa2eb5d68bad11557155715571557;
    BOOLEAN ECCSTR2[120] = $a66aa7d4daa9b5a699a699a699a699;
    BOOLEAN ECCSTR3[120] = $9e1a9ed3c6a78d38e338e338e338e3;
    BOOLEAN ECCSTR4[120] = $7e067e4fc19f83c0fcc0fcc0fcc0fc;
    BOOLEAN ECCSTR5[120] = $fe01fe3fc07f80ff00ff00ff00ff00;
    BOOLEAN ECCSTR6[120] = $01fffe003fff80ff0000ffff0000ff;
    BOOLEAN ECCSTR7[120] = $01fffe3fc0007f00ffff00ff0000ff;
    BOOLEAN TEMPECCSTR[120];
    BOOLEAN TEMPECC[8];
    BOOLEAN TEMPPARITY;
    BOOLEAN TEMPDATA[120];
    INTEGER ISMARTERASE;
    INTEGER ISEITERATION =10;
ENDDATA;

DATA BITSTREAM;
    BOOLEAN UROW[128];
    BOOLEAN UROW_MASK[128] = $fffffffffffffffffffffffffe01ffc0;
    BOOLEAN DATASTREAM[166816] = @q5500G08e3ss_YX4OQ2RRDom6GDDjj9VP2W54sctlPJY26
        _ijj9G88BpsssaB11bARRRQG44eijjP3aj8H4a0GGs640IGCfGIMY08HY000R0H49P10MQOJ
        0C400DiiHM208H0KaXY08WC9Jc20080e4P1DrAX4acio68W4a6IsO00Gg819R4009143015I
        c8Aqea042rq010016a9YcdI512206QQ30009KRIH3W0a4X9fCN02IWWaaC800GIJR224O0II
        sYac45Xe8LIJJo0acYejvPHOIIYWsa4fyxp060IeWiyh818H4Hqg7ya691BO_VB0GavbGs2Q
        YacW49G2AYIOPa8WWGf08GI4I2aS069DYC0BG9QJIG001Cej9910mW6ssa519GQ6URJaI022
        W2Rp_9Y9I2e9RRpc884aCDD9Y44sosqa2000000WWDG13m640006050200C0M0a00O0ue7Oe
        AQ08G0m0G0400W1u002003W18000AX7o85_Y3gX4U990K093G000000bgG12800605m00000
        G0Grm011000000M25q0A0IH0O4W02400GG0Ww958004uVG0200Wo0102004GG00080020100
        W4008C8RY2o84G200eHSmdmWU325120460yCIuhO080400000f12ALDySEemKmCWX5H1nA2M
        150100gNOGzW0W001rZ3G0048910OsO091008800fX24e00a6M88S0600WF410200I3EG100
        O0aGBmW107Ld40401KrYO0WWG00WeM3vl78020CDaeJamFSXoK1ZG540000K00O0W0O00Wa4
        18200_8C0240mmZ2I004_KC0200Hs0280a8gX80W000W00er244080KCGGzY14100kNAOve0
        4004z35W0000X00GSn1HG44dOW000XJA4s3808G0100005000BF8W1000081v1o1B050441O
        4HXn13UGK8GhWG32I38e1QXnW40800KXS0A0000400dN8S8SWWW0Wz0221A0G22IPW1f1AqT
        GGQW2Z07a6aGW21f150X00uX912080D25COSGPp240020400y3OmBm1TA7y0S0580WK63010
        44wO0I00Wj050880q1KGFK3138y5GmE21jQEa3rGUY1r67m200eUm0020Wd06aDO0u21W6X2
        W200C0mGdK221W0m00020HWO3WWjk200GI0404uziY1W5a040SX1nqe2L66K7Lmq022000GG
        1GCAKWW0aWca4GG02e44i489112IGIaaWa8399GIGIg4aa48fWYaay5989AG00240449919X
        GIIYW8X4P901GWaa8999H2GIYa4a49919GI6IaaKW8H11HIGI0B1993IIIW0a08011HMIGY4
        1a491G3Io004a00tTJC0mmVs130jW080u9c2820004GKE@Y0020KmK1R06W1109AA10A00VG
        6a6CHAb1jICqC6HEX5v0sOlM31FM0H20Gla50a408000G999fIIIoi56yje0IIOGaaaa8998
        qme0IYIol080P999IqMIa4iaOBB9HI2b89D91IG2oO03I3G09018IIII0404w0GW4a459B91
        0IGoqaaaG9999D01Waa02n1nSA421LW000Xi85qNW12000G0DYWjrkP0feYoswYDeDIIJRlo
        Mq45fXjBVRK3saYalTBROJFn_stM9bj9eUQps_UogCfDDR891M08G5Gaa8HW0KG1a4b0114D
        WG4IWWGY0GWQQN2YW40Xej5Y8IGcWcs8B0BH06AY64i49DB9AHG1Q0OPW651800f0aGY4K0W
        60GO042B852110WA00I00410a000WW400I80aKlch0008IWiqM49e81I2wIsa0289092TIG4
        a4W8b1f0eO5GfbDDnYs4I4sqaA2JGmQRp40C060j5R9f6pg4K4I99KgG2241cGJd9BIo4I0a
        3cQCLOHX120I9G02OA0WRa18m2200C200af04Wt0W0a4IY4Mrcac0QIHmORQo418H1Cj9od4
        6iXqb8hXKfKjcW18Hn3Ps0COW4DbzJKm0M4GydPB19m200mZ86kCcn8oIw3Kmth30080KYfW
        7B80800e0N21KkuS62rJCO831heEufZ4lj8W4a400000GI20400W089DHI0020CaG373_2e0
        4G0WoS9GW00eAs1z9Lu401800WI3OGhJ8MMkGog6_BHGoW5g@C1G00WQ14KQeW246q0e00H0
        0n1MeGW3z888wr1bETWW00W000020G0bWKOMQ2xy8e2J1G00GoEG021800801f1CG0080400
        X2G90aW0OtN2@2G080WGeX20e04yx2Yy3D880G8Ia43DA8le178E8DW12000RASG402sHSmw
        W2k7GW8002100Xn5B8IW2d4CeZG1N7A0180o903Q2KmX020C02CKu04008p0Ee@v192A8J12
        76MuxX17eQu7v10801waumZe40420K1m0G0080G000O0Yq1W0G1008810WX00yRX08003004
        0K1000G004102GqW5wqImvE2gDi04C0W639qwzWT154GuWk16yg81W100BmE8EI1RSW0O00u
        pi20810021W0008qXa4062GS1mW0D70800SYI20400I3SGA02A4g0GG0YoY44d81W100HOCO
        b01zpc004WKOX2wpPG3330mWWCQbXgBBKsXXsm4iAv002W0FDO8y11LZB86x4xRWOC441ZA0
        400mbW2s2O0201XT38aKPXfEJCI0110Y0fMMOHI1l3WOHI2WWW0wuAHq04W040SPeWc18808
        0fqm22800F7K0880WUC6W00084018911LII22aaW41991GIIMiWbi0189HGoIAa48HmIMWaa
        0bGT40ImI2ccg49998IGYNaba4GI2IYWaa0018PQ02Waii0998Ox81aac40IXIYWW04A0A92
        I2Iabaa8G98HIGPWWja491WmP18CN02J5KG1140118uZ03ANeX44UOv03044Gq1H3B1y0200
        W9C8GW00mR0D02I08SX508G0y2010100W000Y4010081mIKDa603R4yGVN6K3G3X7rox9AS9
        H401W8I3WXA08uka20099TM41099B3FA1a4baX7T0P999IYoIab0a89PBvII4Waa4499fBII
        I2j6L08599MIOIWaaa8998HGIYADW2a099HMAIADW2aaa4P9B99r12899PPIIIec09sLO1W0
        009Lmm408OH8v1ss_Yf5w88RhPsW4Yf8jj9VPQ6K4skkjHJs2MoijjbG823psssajW1XQRRR
        gWaq1FI0Q8VO8e0O0e4COa0D80WI0EGA01402c600M002WmcW008W581J2aX111bXWW00WuG
        WW01QP1G9C0Q28500WGC9HW0e1GoK0GZmK610LI0303AQ00IKP1n0WDi02CH9H400C22MCjG
        QqWGJw468H00MYqa6019WXIBJJ0a04WVfDH0G20asG4P002qiqcC908P2AIp_aX048OBwQR0
        aaWWiDD9GIaN2a4a0PPCQ0HWGWebueB098Im6pD5GCADn611a4019TK2YAY20aGHIABI228e
        baiu005H6GO0WQRIkYX941eDIJp2We8ci911pa0HYsas0mc60dacsK2OG4uQRZ6CDLOEF9QY
        I005bseD50UV811001V_am3ZLSg63XKzm56DqY66@bSH89ASIn3G000_QfWDKMe8W3UlO240
        0900G0IjxWM2Oead3gxAXZ2eG200uP0802W08H7427G10300002Xk8xW10E8Dk7A4eWX0M8Q
        94_29XBPC8d07oJaZ10Mux0304000O088AX6wtxW0VC0OO2GbA9SaW22080_@mXIIC8DW3Yj
        X0WG00R4SmoDIiQY3fkbmK0AKb01a810Y2uWw6HO202_MgWj0AO702_UoWf6C8F2402204nm
        3l1Kmx0GG000uQc22guW05GO1X269a08W00Z8S0W00a@BFeLc24W000GG8GI02GO05W2G00G
        10m9Z941Q1FMmGH178052Ot828e0090110080W02402000K000KWC002000800mwI6000G01
        08mx06ydq1LqHmH15SdL2phGnv18iLG17FL020W2W00Il7embR9awM3O000gKW020mK08020
        068ixW1x0SGT060481gYe2YCg04a02x2G0C04WM19eYeA26eWq0Cehn2MDG1W006BHM000X0
        O0H0W0m0IwO1G0G0VQOmF160Y00ek13s_iWCh8Ow068GG04Dm1tLbm62KaoG2@NmGx64aCY3
        VWaGEd8q0X1X6eGeI4S4G1n0eW000eSIoG140G1P5qP2358MHH1BaQ515xPmWGF8W808mA5s
        T4Xmr8uaY2cxu0400033L0010080010ooIWaWW89P1iA72O9P8LWJ1IIIIiG19LB81GAH9GG
        J2YiWWC7d2OP9PHIII088H9I2I00aae8019GI2MY8W449098IGGoQ19uYG2WKo0Y0a009D99
        IKIIW4aXA9h1tHZW408OsW3800004008l87w2fW5R9O91580040080uR14QCWWx4MG020Ie1
        54SX2rTWG624iV62Z0G0O00XHFM0C00mPCJyYc204W0p0eWj5G8202gAWXxPpO607UtuXiQQ
        O303gvYXQ4C8t43_Xm1abaiA9f81IIIgWaa49Bh9IGII44bav5TGmZ5yWK11FIGUH5ebka49
        9Gcaab49898IIo2W4aaOP991QIIIQ0T8B998tn92DO1G0205CLGG0FOJjH3sMIc9jQD1RhPs
        Wa0CCjzRR9R464skkj1JK06_yjlPGW30nsos5lePbARRPw6WIqkjlP11bO244HW0428C20j0
        02K220HG2W1833002017G9J01W024ie9A0E20W20eYWW8eI9GM0DG0C0ej11A0C42GccW2WI
        42042GR9P11X81100KB0081Ae03e2a49Wk8i5P0KaO0KaI0A010G210e9f8KIQpIGma0Xfb9
        IG22qma0CP801IGQHa4O00BKgg64188WbQJJc0mW08DfjHKG2ZWaKMf880K6I2W4CDgPWCWG
        IKYp544PZ98sfI648ba0cde64eW59AAIe0GGafCeGZX90GKMoXSa468AD00QDQIQGe900AD9
        hHqqM6caa41AJ84QVQamOJX4hJZs8l02O8DpIYWie0aCfP92qcqmsdsGt44STo1BPv1100Wp
        rm8A4DM10XwXG84W2U4GY1Ij8Pk9Qm_1G000B1uGHC7Snd130OmLl50810uTj20m20K7G1fk
        KGuaD0444ex25_zrWMpCG00qGs4404140I00GPtCC591BQmGI598880u@k3srn080G0N8Wmu
        74Cdg2T2YGQ05080G0800mWD4Sba2XKNmDA5SA91pxLmMn6800WODb2G0G089114011W0484
        0q0W00I22Rg001O0f1G0G0WWq0K0010GQ058020ADW40209a6G2hD4H217i2k19CS1036WF3
        EeZ62W00WSeG254K0000GW104v8W040YWS1Auq85Ipn10WO0jUaGa09ilb35vHmxE7C3m1X1
        LmXVEaHE1B9OWG08Wg9c0G10oCW604001120Gqp608W0QTN3_Vm0Y80020I0E67XnHA0D408
        W0GWJ2E0A800C30Yl3A8C83IBuWigPuV93oeWXm1Fuq12YmuXnYE8DW20108aEa1ZCq0G20a
        708m004Kps74Fz20810_tY00100TRJ019802800PuPmSm54U41hMTGMrB810u9D03Qtc0YIG
        040000C90is41taUGW08CHm1PYQmcu50GG2o002GL04yyN19IVmd1E4621t7S0201e_1C8_0
        60810iv02I00WoSmWj@SOBgCU2mW6jTOY842JeW7l8eH32810HSwK1RYyW404WiaG8uH3cmY
        WmHaeZW3U0WWR0I8J_20020EHW1F0IG_48qyX1A1006VAX539eTX4G00GM9M4gB8AKIII04a
        W43999OI2GWWa481O91MIGYa481Y06YWb031AI3I0GI50aKm898XG2IYi0048KMIi00a8888
        H27GWa8a49909II2maa8a0998W0a14901902M6DaGK0218HWIG140a48P910J0XQ5A0GG0GL
        BKCW11NRRGdk5CNq2b5OGdO8yHH2WIW00040W200QG89M2jWcKA8@23w681190OPbd00X4WA
        ZGuis2QFXWQLI8723I3u0W0W1N4qmGCHa3k1rp4n9498000uXI8ASXX_nPuXD5o9WWF3C099
        9Plu4aJD28389HImIYi44Cl82e909HIqJYb4g099A9IsY2aaaeO9PPGIJI099992I2oq0AWW
        aa49939GGGmaaia0818WaaaK1198qIooW79GIIs2bWa0HP9Po2GI2Ua0W0W2TZPGIUBG0G28
        _N2MowWV2Cm000GM_68ouJ1_xodm0e0Fv@RMmBZO4bcRPHcMa6NYizPGGguti@_WSYTaHtQV
        L5PsgORf9xgqxwyiteX040Q0eK0Gs6i0604W38I4IOaG4001164J30WQwD8040AaLfM801A1
        2K4o4M0C99C2P002Wqi0GCeH4I218i10We020WY00Gc20GH00I2R9G2804Q201i010W0901Y
        040WWa0W30100H_jJ1gai11G080m0mKD000IOBFr40W8PnjPI2b0Q0AHIBf0X856DhDKG2W0
        yqqs2G0J0GRQhIu@5T2I2mJ6jDf0iP85QcyI00154Ep19H00IQ8O3y2IIW4ee0W6190cGm08
        3440GQP1mD0308ncDCYKh9DOaK40qsqa8RRG1NIocejeC8D99202HShCj8ICWmcD4dJ8HSKx
        6QsCaWO2TR1Q1MeVHGACAY8IS8MN2s6nWUY_u7fCwUW04400hL4n2JDGJ01O332G8W1iIW20
        aW0Y7WWl8A0W0sS195G880ukq4_1W010087uPGd064MZ1P3em2BBa6m12400010W0A00utM2
        gVMXhjH8E04w3aWyOM0G20m357y4W1W0102tu01G000020UknWJDA8LW4I3G10102zgqm4bC
        4P31x9H0W8WW7lD08G0GTn6GW2IOBw44W40G600W000091000101TQVG2U6a601T2S010W09
        0G4f1e090080000i400IW4Y9JI8kH6cXeYQ0E0420pu05aUh17oH01081e00051R0804aP4C
        Ouf54f00yU32T2a0920W7RI04G0GB04C_G10C00A0e08040e0W6M9eWo2A0G04IpABy841@J
        N02X0W08E8cG4a00200001G19000808a000100WXK0000G40W0qwb7C_D1GGI0gvXWHY8urY
        2Q9mWA0801P40G0HWFW8e4p2C0084cW1C842Y2W0G300L1OGDj78040uBH2WW0WCZX1juOG_
        15W6041820uIG5yem15hIGX144Y01m004800002W8G20WX005eh4E0f020GG0080000Y08sC
        WWPV801880100300a00B00oBYWU5A0GK2W0002G3310000G488G00H8bX2I3W0O1002WG4s5
        W000a0flOW44WWr080a04Gh74a1G10G008G0WD7S19FPGRN64Ha14080020G14a0g7i3MMm0
        4Y18fGyGGG5q1E1b0S028WWb@9e@g2gdXXK7LuKa4woWWrFKu1W3k9eWAOSe7P56IgXdA9ug
        C3k3eWjNH0G0GqeF6SSX4G002AyXWO28W104K9p5Kkp2daRG9044nT1dGLmmX8CTz2POmWY0
        0W@1Cu9b62FYWweEu043cPe00yIGaCXa81e8qYC18fC1H62IYcW409991I205Pvv90GIK4W4
        P9028JIIp2X1C41PA3mIIIaGB8HI0IWaWa4G1082GIGaaCW099W1III0aKW0MomI600W0809
        rH220WWW4AA8C02oK8aXG8810s8mWGkC8n03_9uW7IZujW56E01G200B1XmzQ4i9211ELGF4
        7G000ebw5YgWWe1C0W80mWf70a00022GGl07W00GO2X2W40W5EG2zWSG5i6ytG2f1eG8DS4Q
        DADcKHQDBa6m48Wba8900HIGJYa4409989JI2IWaaW8P9BGGI28hn288A9nM3IYaab4P9H9I
        I2KiaaC8999WbaaK818HuH4q0G18189G2GIgaba09GGYaa44190AIoM24Wa099P9XQII2eia
        4P9f9G0080010TeL15ETGM58iO6180X0I1W0850198i010G34YEsijbe1GRApssM0XffDQRR
        Rpaqq4ijjPnNa8fbjLR3BgoMsMjjfDI1wUrssQ8DffKRRR32H9280C84W58GWmW01m40HG1W
        40GG0mWe7NG09v0BW0H1mW4f00W208JWaC0O208904m0GGJ2PLGIP10O8038f0B2a08m64C4
        2GWa2J2UI8W44C8acK0O8GW0A0108b8Xa98130041smMiG220eacCf000G0Joca04803DoRI
        000WWS9j90m0aKzjD94IGJGcqc8R0f9IQRha4W080zDJIHGZj5a019OrcM6W4WqGBAR92I0J
        WfjjG09XGYCC99000QYI4WCZK091RGWI30Wa2PGBx00GIa02c0r_ca0ROH5ORNZ4DWL88jDQ
        0c2bKisC9ZqaC8aeDjJZmaYW_qk6P9I04IRR5lj90Bf9fe53gWGXU9C8l8B0101a7n2jLdnQ
        N5qJX3TeTGl06a_O2rOt0W0000200XMqm607O0008RW422O1T000RqL0W82W7uc8a42QCm1W
        W04jMWGBE5y4G1bAUGi1A0300eAt3kdXWsMBulM3g70XnaI8si3gFgWQ0E8Qd3MTnXMGC83j
        6UVX1G000n4aG379aSl1p1P0W00mU0EOZ520200qg4116T088300aW4XDSmE640oG08BD2I3
        uYgCAGCa0GQ0AK201W440g1mWAVl8WA580W0ai030Y00QM0X45Au9t40828azK1t0GGyjF01
        200418GFcDK391Nwjml08ax31@vTGBH5SXJ27gG0W2GoW5C0O00qZL900200304GRkAiAm20
        1808001CNi1200W08000904OzR28000S7N1bOd088HY1CE83f3IFe012000A020K000CG0e5
        d2_Me00XGa0W00_0mWq0A8mW4IU6110003yO02GWWhNCOfP2G052y0S38G00Uk2150000004
        WU0Wq3G1N1MmW0442621BG0a4400080G2IG2hpW2HB0Y00G9U4iAW14a0WAC2XHAG8DW6wAo
        01W20nnHWX00Wq0I0mGG0004WdlKG040mqF48440eW3508G0a6P1VSamY04K6m1NGK0I22WC
        0CuTJ5G800CLp5dL@GM4By1s1p181100WJmL8H97IRg0A000zaL0G0000218400GW0GGCKl2
        7LWGp0501000I52mf14iUV2ZSWm7W94YI341W0AemWw3DuU030900Y080eHa6wo7YUMJeC03
        6kXWg180389fGM22Wa0aA89B1IoI0C0a081Bufr481GWYbba41H98mIG2WWiX919A1IG2AuH
        20GIi8919Okw2KG0G0aab4P00020MI4a4a880IWbba801HG2YG04aWC3B09422G4a0a83119
        v52o90ZN4AeG56IhFX10gOCh2MNW06G00T0GmDRD4pG2P8Gmu08CFW231dmmy7qYY33H8110
        8WZO8eB02YC@WTDBG001GJbF4z2351KG0qHi8I15Komx4LSGW3G020QDY089f8DQM02IIIi0
        4aXZN01990iajaA8981IMIY0qaCdQ28aaa88PPBy822UK10080IIIMW4a4G899HI020KO9x5
        188D02a4aa5QD1WaWW8BRP5ye1h7aGBh5qeg140aGIpBXaG88503cXh00205Ii7ajTBZ1I3M
        Ylbz1WcHHyQpU4u49SSPVJcaC10PRhssM20WijQRJ1nWmngzjLL180esssE2IYmem6e0P99B
        G0G00iWCSWgD082I8404W03I2Wj00GX42Mss43AO2ABOQ0410X1biKdY609I8HmK202080P1
        0Y8O8WWAW040iC02WI042sG044i92ob4G01c58HQ4414mgi4G2102SZI61f0W40eMaCD02Gm
        25sca00XO0G9JIwB4ORnQ1e05WQRJIYK44W8f9H68G0Grq29598GGIQcd0ziQH0a42YI9C40
        309XdxKKi8XsW2oRm40KI03IX@20Wam45AV89GIYaCEFKAG9P1MKVf4WWCa951AD9D9YMWWX
        daa83JXgOJI44Dj2MfBPI2jOP0DLIQhW990G9jfDKqa0eaq_AQQI0KMQRRG4CL12poNm00Qy
        7K3x@jmc9L08W0eht8ItoY7jje5W36xNXm4H83W44204q9G4o000_8GYPDEey37oEWWOvC02
        W002m2W1vK00GImmo7qYW1810865_00201e088MKEXRtI0G00q8a5000CevZ7QN610201W02
        XMYPXMxGeaE2c2gWQ2OOH04G048UmZ10900404004a0eO52cW118040T2amnC5qBW1v@K0W0
        WYq0E0o0WGQ0BC0m1fVKGQ0BSTm1h7LGtsA4Zv2vb0nYb6q3012040o501020Wh3xmDK70G1
        0u2A4_pX04WG0@6ZGy3HCCW1@iXHC88i5U1D3R0600W09MeBY2shvWQKAW006mGj8iJZ1020
        28320KZ017SIGjH4qoR2lAWGk0408K000004CW0W10A0H0014100e002T1GW6000a400zEH0
        a20WUY80G10040804800FuYGX05CZX2G0006DXX0MGua12C000it41W01033WWqf98MX3ID0
        XGl88J02e000S101G0o8UmOXb0AW40W0000WIg98ye4W040yKe1Z4K04W5W10W8D03kdWWq0
        UO20281G02800W408G825Snm1BSWmjpEKP33rSMG906S_i1fTVGYEDa6y1rzIGFW6a9W1N8G
        G8FHKH26hJHmD14e02G8qL2ArOXuqJ8Hs8EBuW6CM0W00KkHHKVg1ZNam014G800Owa4A4ZW
        b7Au442ADv1100096OGZb5abI3pZLWe00WwqEO713sDu0W4WbjvGWW0aW2Z8W0WW49898IwI
        IWDW4GIQJgaaa4A9882IIIaXaW0H99HIKGWcC4499GW4iW41908I2I2IMk0aWaa8988nII0Y
        W08HGI2Yaa411991GGIoWaaaG8191KIIYCaaaCF8OGN90e01ykm18W082LfWoMTu06BMghWD
        Z88e18EYr08000nYWGEA60402unk2UynWOpEG300GaN7qQ@1NP2HFJJ4EW2r4aGWyDC7m1BW
        PG5aTyo617rbG4RBC0W4bCIWaaG4B991IIIQqaaa1999OZA20898eaaa49999KIIo66E8e12
        2Ua0Wa09IIIIaWaWO999eXJ289P8HO20Yaaa08191baaa2f99J3O1oGIKfGQm4254ZM1hdcm
        G14G1018g35Yj02JBVPmsMMDXWeBPR@J6MKWSejTB9ImwsmsayDB830_sszDia00OQxsccs6
        04hDVJ5B50atsDR8e0u20aA8Ko5WGG3KHG1M62800688840iPA049DP30IOHCaaDJE9NeIQp
        abWa0b1D1o2PY2Ib4ge8UWW4Ge0q044IGGI0O1029X0uf0099W8100bMa0OGW22BZ0089P82
        W5800a289xE90GI0101gIJRJWWO008DbT30000csWf111oIIRsaG1WGWIH_We881WG9HI6WD
        W0jjD8IoIIW4MoA5HQnKGG0YaiCUH81Y0Ws9B5W0O80nQGIe00a4Y9S@W81i8eaOwLbKY480
        ey400M2Q8M_Y1n4HWGH5AHJI8W5imHj5992orWmsca8I1HnIRJ24OV968I2aM3DD0Y9nQRm0
        C5e40FDRe50K4asM2c0Zi8mejz660WYmrUeB96sS0XMbu8J0CsO7244a4z4bG0l44gn215PG
        H18iUt15L_00100aW405yOm1C4a601VrQmKB4O800wQW3040G0e0010400a000880081B0M8
        eWg08en030908Sk220202c2sWjLMGG24m_BFiHl25ZGGQ0Aal21f1WmMp5KGG2pBJG66AqKW
        12G00Az0XeCDu@P3011Ga602T1KGQ0843J1f1OmH26a602ZjHmfRACct1FWSG78ACsF1fVE1
        100XE188VX3opsW6JIOle8QVmXXjF80YFUc8X67CuG0348004Jp2TkG0eW0Wl8MO6X30I02K
        ZK100O5QTnWBYJ8H13IggWN3982W208C1ieL2DmOGGVBSez1vrGmRCAaEG3tzWG6UE4201m0
        00cpSZP1Ceun3wf8Xi5WeiI2W4404bQ290KGh060C40O20224eWLFHOVp2MNaWq0K8EW3Iow
        Wq0EuU23I30Y58DuNH580005UW1F0K08J0WG1KuF226BmWGGk04a0GcdBi4W3t@OGO2EKKm1
        TYhGKa5CVa59ZTmm894A62R_jmGEEWW000420GN07KYf1FFSmw05qXW3tQMmS388W10ec4EY
        QdWiJBuQ7C222X1_BO005WJI0gaaa4C81P1E481181IIGY0aW49999I1a48P99GI4IYi4b01
        B180IYYaaaY819PHG2I0B18GWW5000IwQG2gmc01991GII24099GIII2a804P989IGMI9yKW
        WWa4P8111FQGpK6iIV5pZImDN7icm2x7W0090Xn3I0100HS2AS8A2ddfGOH7ymY1818060W0
        990GdMaGK084101pjGGJM5q5W1G900I3WXN8WuYE5odzYi5Y8wwBka5XpbCW100GF9KiSm1j
        LNGRH4KKa1O1913UiW67D0099PUH64QD11FI0999BGII2f14HD05899902aa4939eq0AG2GI
        M2s6a601W0c42wMaJ9OOTX3ibb0Yaa4Gsss0III28PR909991ajbOXaa49C0DBW0091M0iaG
        2Wa490sI81GI2D0A901091G2PH5III2eb48d020f4C1899HWGoc4aa4940Gaf4W8981Gc220
        a4e08P110I2G0WfX80990j9fHejjDXaaM9qssi1RIb6ORpsWDHI2iDRRf1GIID0QRW00f1g0
        ijm0Wa0M0sMG2GQ4Q0Q@iY0WaaaJEK09910000GfRL00aaag380909vJ35avG1G0GIc8h0aa
        08III0HII0899908991aaaaG38WaaaWaaa440a4Y0W40I0IYG2GW0909I818I04089W0090e
        PRR30008ajjj14000msssoUX0sss2bQH0ej1G004O2ms200GGO1OR10008e1eD3W0080IIa4
        KoAX19HI2Ig6oWC99B1OBB1aaa40ejfX4Wa4a9j9J2Go4qasa110H2OIoqe00P189QP68IIo
        WP9P18999Waaj04aa0mMoo4IIIaGB9H220Y4Pb8I290IGaGCPX4099KGYa0204488HM0II2G
        OIII4181rO010899X999H4Wa0naa49aa41Xaa89HIaaOQYaq9HIG6DIIw0999X8999eaajeb
        aa4qMoYbIIIaGB9I299HIej8PXb499a8APf4R99M8XaGajaaJaKMKosIYRJA96PR95FIGrv8
        COD1FPRGXRASGt1jTdHLICC008H1mG609CHi1ZEXIxJgacF15k4Hq0DqmV32408QhtY_QAOa
        e46yfXL2afw0EgbQXNQQOdG30a44W0040002IfP9SF412004Qa_Wob98I05UpzWq0g000W0m
        02Wq0aeAT6EJXXOXOu06B63uWv2I8t17YZeXwgEuG69wH0bLNcenbA60OcB280I100004WP4
        Cu2F8o9mZI2g8D0D_ifXAale0G4Qo81028000008590C001WL00M1eWlI8G110G02ACP1216
        SGKd7a6W1bKfmNH6S0X2NP0nC0E491100XWc2GYABPO0WA4K004Jp6RGtHOXKqHH15ZPGH19
        iJG1Pssm00Eiyf1xQGnJe6aR26f0eGO67yth65rVGHOA41H97@K08019IGGIaa4a099850j1
        a0W0GIIGYWWaC8e3oda0IGI0aaaC81994441IJ2G44a4yr41aW4a8W91bAK10WaW8988HI4G
        8DW24aaa44q1jvOGk7Eym12r0SG8vBiMI5j0KGDq6Smh1hmNmKl5CX01jgM0Waa0100WZHUG
        S3GiYM254rGGlGa353n94HQ0Da0Y67YDH33BK4o2H5qGG3NWaaa4f99H6J60aaa4981920II
        ba4a881Maaa4888G9Z92g1e02111YMIIsqXWzc885W225T1IMIIaaa4mIII2aaaCz942Qe0G
        B99oII2IjeWzIoei@26bXYPTB8612W002SnG1W004IHeWQ0o0;
    INTEGER CHECKSUM =61906;
ENDDATA;


PROCEDURE DO_EXIT USES GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $81;
    WAIT IDLE, 250 USEC;
    IRSCAN 8, $81, CAPTURE BUFF128[7..0];
    IF ( ! (BUFF128[2]==0) ) THEN GOTO Label_0;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $07;
    WAIT IDLE, 1 CYCLES;
    WAIT IDLE, 200 USEC;
    Label_0:
    IRSCAN 8, $ff;
    WAIT IDLE, 200 USEC;
    WAIT RESET, 3 CYCLES;
    EXIT STATUS;
ENDPROC;

PROCEDURE DO_READ_SECURITY USES GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a4;
    WAIT IDLE, 3 CYCLES;
    DRSCAN 44, $00000000000, CAPTURE SECREG[];
    ULUWE = SECREG[ULUWE_BITLOCATION];
    ULARE = SECREG[ULARE_BITLOCATION];
    ULUPC = SECREG[ULUPC_BITLOCATION];
    ULUFE = SECREG[ULUFE_BITLOCATION];
    ULUFP = SECREG[ULUFP_BITLOCATION];
    ULUFJ = SECREG[ULUFJ_BITLOCATION];
    ULFLR = SECREG[ULFLR_BITLOCATION];
    ULULR = SECREG[ULULR_BITLOCATION];
    ULAWE = SECREG[ULAWE_BITLOCATION];
    ULARD = SECREG[ULARD_BITLOCATION];
    ULOPT[1] = SECREG[ULOPT1_BITLOCATION];
    ULOPT[0] = SECREG[ULOPT0_BITLOCATION];
ENDPROC;

PROCEDURE DO_OUTPUT_SECURITY USES GV;
    PRINT "Security Settings :";
    IF ( ! (ULUFP==1) ) THEN GOTO Label_1;
    PRINT "FlashROM Write/Erase protected by pass key.";
    Label_1:
    IF ( ! (ULUFJ==1) ) THEN GOTO Label_2;
    PRINT "FlashROM Read protected by pass key.";
    Label_2:
    IF ( ! (ULAWE==1) ) THEN GOTO Label_3;
    PRINT "Array Write/Erase protected by pass key.";
    Label_3:
    IF ( ! (ULARD==1) ) THEN GOTO Label_4;
    PRINT "Array Verify protected by pass key.";
    Label_4:
    IF ( ! (ULUFE==1) ) THEN GOTO Label_5;
    PRINT "Encrypted FlashROM Programming Enabled.";
    Label_5:
    IF ( ! (ULARE==1) ) THEN GOTO Label_6;
    PRINT "Encrypted FPGA Array Programming Enabled.";
    Label_6:
    PRINT "=========================================";
ENDPROC;

PROCEDURE DO_QUERY_SECURITY USES DO_READ_SECURITY,DO_OUTPUT_SECURITY;
    CALL DO_READ_SECURITY;
    CALL DO_OUTPUT_SECURITY;
ENDPROC;

PROCEDURE READ_UROW USES BITSTREAM,GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a8;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 165 USEC;
    DRSCAN 128, $00000000000000000000000000000000, CAPTURE UROW[];
    SUROWALGOVERSION[6..0] = $00;
    IF ( ! ( (UROW[5]==0)&&(UROW[0]==1)) ) THEN GOTO Label_7;
    SUROWALGOVERSION[5..4] = UROW[24..23];
    Label_7:
    IF ( ! ( (UROW[5]==1)&&(UROW[0]==0)) ) THEN GOTO Label_8;
    SUROWALGOVERSION[5..4] = UROW[24..23];
    SUROWALGOVERSION[6] = 1;
    Label_8:
    SUROWCHECKSUM[15..0] = UROW[127..112];
    SUROWCYCLECOUNT = INT(UROW[111..102]);
    SUROWDESIGNNAME[69..0] = UROW[101..32];
    SUROWPROGMETHOD[2..0] = UROW[31..29];
    SUROWALGOVERSION[3..0] = UROW[28..25];
    SUROW_PKG_TYPE[5..0] = UROW[22..17];
    SUROW_SW_VERSION[6..0] = UROW[16..10];
    SUROWPROGRAMSW[3..0] = UROW[9..6];
    SUROW_SRAM_DISTURB[0] = UROW[4];
    SUROW_SPEED_GRADE[2..0] = UROW[3..1];
    ACT_UROW_CYCLE_COUNT = SUROWCYCLECOUNT;
ENDPROC;

PROCEDURE FIX_INT_ARRAYS USES GV,ECCCHECK;
    IF ( ! (HEX[0]!=48) ) THEN GOTO Label_9;
    FOR I = 0 TO 7;
        TEMP = HEX[I];
        HEX[I] = HEX[(15-I)];
        HEX[(15-I)] = TEMP;
    NEXT I;
    FOR I = 0 TO 127;
        TEMP = SYNDROMETABLE[I];
        SYNDROMETABLE[I] = SYNDROMETABLE[(255-I)];
        SYNDROMETABLE[(255-I)] = TEMP;
    NEXT I;
    Label_9:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DISP_CHKSUM_DESIGN USES GV,FIX_INT_ARRAYS;
    CALL FIX_INT_ARRAYS;
    IF ( ! (INT(SUROWCHECKSUM[15..0])==65535) ) THEN GOTO Label_10;
    PRINT "CHECKSUM: ";
    Label_10:
    IF ( ! (INT(SUROWCHECKSUM[15..0])!=65535) ) THEN GOTO Label_11;
    PRINT "CHECKSUM: ",CHR$(HEX[INT(SUROWCHECKSUM[15..12])]),CHR$(HEX[INT(SUROWCHECKSUM[11..8])])
        ,CHR$(HEX[INT(SUROWCHECKSUM[7..4])]),CHR$(HEX[INT(SUROWCHECKSUM[3..0])]);
    Label_11:
    IF ( ! ( ( (INT(SUROWDESIGNNAME[0..30])==2147483647)&&(INT(SUROWDESIGNNAME[31..61])==2147483647))&&(INT(SUROWDESIGNNAME[62..69])==255)) ) THEN GOTO Label_12;
    PRINT "Design Name: ";
    Label_12:
    IF ( ! ( ( (INT(SUROWDESIGNNAME[0..30])!=2147483647)||(INT(SUROWDESIGNNAME[31..61])!=2147483647))||(INT(SUROWDESIGNNAME[62..69])!=255)) ) THEN GOTO Label_13;
    PRINT "Design Name: ",CHR$(INT(SUROWDESIGNNAME[63..69])),CHR$(INT(SUROWDESIGNNAME[56..62]))
        ,CHR$(INT(SUROWDESIGNNAME[49..55])),CHR$(INT(SUROWDESIGNNAME[42..48])),CHR$(INT(SUROWDESIGNNAME[35..41]))
        ,CHR$(INT(SUROWDESIGNNAME[28..34])),CHR$(INT(SUROWDESIGNNAME[21..27])),CHR$(INT(SUROWDESIGNNAME[14..20]))
        ,CHR$(INT(SUROWDESIGNNAME[7..13])),CHR$(INT(SUROWDESIGNNAME[0..6]));
    Label_13:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DISPLAY_UROW USES BITSTREAM,CONSTBLOCK,GV,DISP_CHKSUM_DESIGN;
    EXPORT "USER_ROW", UROW[127..0];
    PRINT "User information: ";
    CALL DISP_CHKSUM_DESIGN;
    IF ( ! (FLAGDISPLAYCYC==1) ) THEN GOTO Label_14;
    PRINT "CYCLE COUNT: ",SUROWCYCLECOUNT;
    Label_14:
    INTEGER TMPINT =INT(SUROWPROGMETHOD[]);
    INTEGER TMPINT2 =0;
    INTEGER TMPINT3 =0;
    INTEGER TMPINT4 =0;
    INTEGER TMPINT5 =0;
    IF ( ! (TMPINT==IEEE1532) ) THEN GOTO Label_15;
    PRINT "Programming Method: IEEE1532";
    Label_15:
    IF ( ! (TMPINT==STAPL) ) THEN GOTO Label_16;
    PRINT "Programming Method: STAPL";
    Label_16:
    IF ( ! (TMPINT==DIRECTC) ) THEN GOTO Label_17;
    PRINT "Programming Method: DirectC";
    Label_17:
    IF ( ! (TMPINT==PDB) ) THEN GOTO Label_18;
    PRINT "Programming Method: PDB";
    Label_18:
    IF ( ! (TMPINT==SVF) ) THEN GOTO Label_19;
    PRINT "Programming Method: SVF";
    Label_19:
    PRINT "Algorithm Version: ",INT(SUROWALGOVERSION[6..0]);
    TMPINT = INT(SUROW_SPEED_GRADE[]);
    IF ( ! (TMPINT==GRADE_UNSPEC) ) THEN GOTO Label_20;
    PRINT "Device Speed Grade: speed grade information not available from device";
    Label_20:
    IF ( ! (TMPINT==GRADE_1) ) THEN GOTO Label_21;
    PRINT "Device Speed Grade: -1";
    Label_21:
    IF ( ! (TMPINT==GRADE_2) ) THEN GOTO Label_22;
    PRINT "Device Speed Grade: -2";
    Label_22:
    IF ( ! (TMPINT==GRADE_3) ) THEN GOTO Label_23;
    PRINT "Device Speed Grade: -3";
    Label_23:
    IF ( ! (TMPINT==GRADE_F) ) THEN GOTO Label_24;
    PRINT "Device Speed Grade: -F";
    Label_24:
    IF ( ! (TMPINT==GRADE_STD) ) THEN GOTO Label_25;
    PRINT "Device Speed Grade: STD";
    Label_25:
    IF ( ! (TMPINT==GRADE_4) ) THEN GOTO Label_26;
    PRINT "Device Speed Grade: -4";
    Label_26:
    IF ( ! (TMPINT==GRADE_UNDEF) ) THEN GOTO Label_27;
    PRINT "Device Speed Grade: speed grade information not available from device";
    Label_27:
    TMPINT = INT(SUROWPROGRAMSW[]);
    IF ( ! (TMPINT==FP) ) THEN GOTO Label_28;
    PRINT "Programmer: FlashPro";
    Label_28:
    IF ( ! (TMPINT==FPLITE) ) THEN GOTO Label_29;
    PRINT "Programmer: FlashPro Lite";
    Label_29:
    IF ( ! (TMPINT==FP3) ) THEN GOTO Label_30;
    PRINT "Programmer: FlashPro3";
    Label_30:
    IF ( ! (TMPINT==FP4) ) THEN GOTO Label_31;
    PRINT "Programmer: FlashPro4";
    Label_31:
    IF ( ! (TMPINT==FP5) ) THEN GOTO Label_32;
    PRINT "Programmer: FlashPro5";
    Label_32:
    IF ( ! (TMPINT==SCULPTW) ) THEN GOTO Label_33;
    PRINT "Programmer: Sculptor WIN";
    Label_33:
    IF ( ! (TMPINT==BPW) ) THEN GOTO Label_34;
    PRINT "Programmer: BP Programmer";
    Label_34:
    IF ( ! (TMPINT==DIRECTCP) ) THEN GOTO Label_35;
    PRINT "Programmer: DirectC";
    Label_35:
    IF ( ! (TMPINT==STP) ) THEN GOTO Label_36;
    PRINT "Programmer: Actel JAM Player";
    Label_36:
    IF ( ! ( ( ( ( (TMPINT==FP)||(TMPINT==FPLITE))||(TMPINT==FP3))||(TMPINT==FP4))||(TMPINT==FP5)) ) THEN GOTO Label_52;
    TMPINT2 = INT(SUROW_SW_VERSION[]);
    IF ( ! (TMPINT2==FP33) ) THEN GOTO Label_37;
    PRINT "Software: FlashPro v3.3";
    Label_37:
    IF ( ! (TMPINT2==FP34) ) THEN GOTO Label_38;
    PRINT "Software: FlashPro v3.4";
    Label_38:
    IF ( ! (TMPINT2==FP40) ) THEN GOTO Label_39;
    PRINT "Software: FlashPro v4.0";
    Label_39:
    IF ( ! (TMPINT2==FP41) ) THEN GOTO Label_40;
    PRINT "Software: FlashPro v4.1";
    Label_40:
    IF ( ! (TMPINT2==FP42) ) THEN GOTO Label_41;
    PRINT "Software: FlashPro v4.2";
    Label_41:
    IF ( ! (TMPINT2==FP50) ) THEN GOTO Label_42;
    PRINT "Software: FlashPro v5.0";
    Label_42:
    IF ( ! (TMPINT2==FP51) ) THEN GOTO Label_43;
    PRINT "Software: FlashPro v5.1";
    Label_43:
    IF ( ! (TMPINT2==FP60) ) THEN GOTO Label_44;
    PRINT "Software: FlashPro v6.0";
    Label_44:
    IF ( ! (TMPINT2==FP61) ) THEN GOTO Label_45;
    PRINT "Software: FlashPro v6.1";
    Label_45:
    IF ( ! (TMPINT2==FP62) ) THEN GOTO Label_46;
    PRINT "Software: FlashPro v6.2";
    Label_46:
    IF ( ! (TMPINT2==FP84) ) THEN GOTO Label_47;
    PRINT "Software: FlashPro v8.4";
    Label_47:
    IF ( ! (TMPINT2==FP85) ) THEN GOTO Label_48;
    PRINT "Software: FlashPro v8.5";
    Label_48:
    IF ( ! (TMPINT2==FP86) ) THEN GOTO Label_49;
    PRINT "Software: FlashPro v8.6";
    Label_49:
    IF ( ! (TMPINT2==FP90) ) THEN GOTO Label_50;
    PRINT "Software: FlashPro v9.0";
    Label_50:
    IF ( ! (TMPINT2==FP91) ) THEN GOTO NOT_FP91;
    PRINT "Software: FlashPro v9.1";
    NOT_FP91:
    IF ( ! (TMPINT2==FP100) ) THEN GOTO NOT_FP100;
    PRINT "Software: FlashPro v10.0";
    NOT_FP100:
    IF ( ! (TMPINT2==FP_11) ) THEN GOTO NOT_FP_11;
    PRINT "Software: FlashPro v11.0";
    NOT_FP_11:
    IF ( ! (TMPINT2==FP_11_1) ) THEN GOTO NOT_FP_11_1;
    PRINT "Software: FlashPro v11.1";
    NOT_FP_11_1:
    IF ( ! (TMPINT2==FP_11_2) ) THEN GOTO NOT_FP_11_2;
    PRINT "Software: FlashPro v11.2";
    NOT_FP_11_2:
    IF ( ! (TMPINT2==FP_11_3) ) THEN GOTO NOT_FP_11_3;
    PRINT "Software: FlashPro v11.3";
    NOT_FP_11_3:
    IF ( ! (TMPINT2==FP_11_4) ) THEN GOTO NOT_FP_11_4;
    PRINT "Software: FlashPro v11.4";
    NOT_FP_11_4:
    IF ( ! (TMPINT2==FP_11_5) ) THEN GOTO NOT_FP_11_5;
    PRINT "Software: FlashPro v11.5";
    NOT_FP_11_5:
    IF ( ! (TMPINT2==FP_11_6) ) THEN GOTO NOT_FP_11_6;
    PRINT "Software: FlashPro v11.6";
    NOT_FP_11_6:
    IF ( ! (TMPINT2==FP_11_7) ) THEN GOTO NOT_FP_11_7;
    PRINT "Software: FlashPro v11.7";
    NOT_FP_11_7:
    IF ( ! (TMPINT2==FP_11_8) ) THEN GOTO NOT_FP_11_8;
    PRINT "Software: FlashPro v11.8";
    NOT_FP_11_8:
    IF ( ! (TMPINT2==UNKNOWN) ) THEN GOTO Label_51;
    PRINT "Software: FlashPro vX.X";
    Label_51:
    LABEL_SEPARATOR = 0;
    Label_52:
    IF ( ! ( (TMPINT==SCULPTW)||(TMPINT==BPW)) ) THEN GOTO Label_56;
    TMPINT3 = (INT(SUROW_SW_VERSION[6..5])+SCULPTORMAJORBASE);
    TMPINT4 = (INT(SUROW_SW_VERSION[4..1])+SCULPTORMINORBASE);
    TMPINT5 = 0;
    IF ( ! (SUROW_SW_VERSION[0]==1) ) THEN GOTO Label_53;
    TMPINT5 = 1;
    Label_53:
    INTEGER CURRPGM =INT(ACT_UROW_PROGRAM_SW[3..0]);
    IF ( ! (TMPINT==SCULPTW) ) THEN GOTO Label_54;
    IF ( ! ( ( (CURRPGM==FP3)||(CURRPGM==FP4))||(CURRPGM==FP5)) ) THEN GOTO NOT_FP3_FP4;
    PRINT "NOTE: The Sculptor Windows version number below should be converted to HEX.";
    NOT_FP3_FP4:
    PRINT "Software: Sculptor Win v",TMPINT3,".",TMPINT4,".",TMPINT5;
    Label_54:
    IF ( ! (TMPINT==BPW) ) THEN GOTO Label_55;
    IF ( ! ( ( (CURRPGM==FP3)||(CURRPGM==FP4))||(CURRPGM==FP5)) ) THEN GOTO NOT_FP3_FP4_BPW;
    PRINT "NOTE: The BP Windows version number below should be converted to HEX.";
    NOT_FP3_FP4_BPW:
    PRINT "Software: BP Win v",TMPINT3,".",TMPINT4,".",TMPINT5;
    Label_55:
    LABEL_SEPARATOR = 0;
    Label_56:
    PRINT "=========================================";
ENDPROC;

PROCEDURE CAL_PARITY USES GV,ECCCHECK;
    INTEGER COUNT =0;
    INTEGER II;
    FOR II = 0 TO 119;
        IF ( ! ( TEMPDATA[II]&&TEMPECCSTR[II]) ) THEN GOTO Label_57;
        COUNT = (COUNT+1);
        Label_57:
        LABEL_SEPARATOR = 0;
    NEXT II;
    IF ( ! ((COUNT%2)==1) ) THEN GOTO Label_58;
    TEMPPARITY = 1;
    Label_58:
    IF ( ! ((COUNT%2)==0) ) THEN GOTO Label_59;
    TEMPPARITY = 0;
    Label_59:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE CAL_ECC USES ECCCHECK,CAL_PARITY;
    TEMPECCSTR[] = ECCSTR0[];
    CALL CAL_PARITY;
    TEMPECC[0] = TEMPPARITY;
    TEMPECCSTR[] = ECCSTR1[];
    CALL CAL_PARITY;
    TEMPECC[1] = TEMPPARITY;
    TEMPECCSTR[] = ECCSTR2[];
    CALL CAL_PARITY;
    TEMPECC[2] = ( !TEMPPARITY);
    TEMPECCSTR[] = ECCSTR3[];
    CALL CAL_PARITY;
    TEMPECC[3] = ( !TEMPPARITY);
    TEMPECCSTR[] = ECCSTR4[];
    CALL CAL_PARITY;
    TEMPECC[4] = TEMPPARITY;
    TEMPECCSTR[] = ECCSTR5[];
    CALL CAL_PARITY;
    TEMPECC[5] = TEMPPARITY;
    TEMPECCSTR[] = ECCSTR6[];
    CALL CAL_PARITY;
    TEMPECC[6] = TEMPPARITY;
    TEMPECCSTR[] = ECCSTR7[];
    CALL CAL_PARITY;
    TEMPECC[7] = TEMPPARITY;
ENDPROC;

PROCEDURE ECC1_CHECKING USES GV,ECCCHECK,CAL_ECC;
    BOOLEAN READECC[8];
    BOOLEAN CALECC[8];
    BOOLEAN SYNDROME[8];
    INTEGER IERRORBIT;
    BOOLEAN BECC1VALUE;
    READECC[7..0] = BUFF128[7..0];
    TEMPDATA[119..0] = BUFF128[127..8];
    CALL CAL_ECC;
    CALECC[] = TEMPECC[];
    FOR I = 0 TO 7;
        IF ( ! (CALECC[I]!=READECC[I]) ) THEN GOTO Label_60;
        SYNDROME[I] = 1;
        Label_60:
        LABEL_SEPARATOR = 0;
    NEXT I;
    IERRORBIT = SYNDROMETABLE[INT(SYNDROME[])];
    IF ( ! ( (IERRORBIT!=-1)&&(IERRORBIT!=-99)) ) THEN GOTO Label_63;
    BECC1VALUE = BUFF128[(8+IERRORBIT)];
    IF ( ! (BECC1VALUE==1) ) THEN GOTO Label_61;
    BUFF128[(8+IERRORBIT)] = 0;
    Label_61:
    IF ( ! (BECC1VALUE==0) ) THEN GOTO Label_62;
    BUFF128[(8+IERRORBIT)] = 1;
    Label_62:
    LABEL_SEPARATOR = 0;
    Label_63:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE READ_F_ROW USES GV,ECC1_CHECKING;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $f9;
    DRSCAN 3, FADDR[];
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $bf;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 165 USEC;
    DRSCAN 128, $00000000000000000000000000000000, CAPTURE BUFF128[];
    CALL ECC1_CHECKING;
ENDPROC;

PROCEDURE DO_DEVICE_INFO USES GV,READ_UROW,DISPLAY_UROW,READ_F_ROW;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $0e;
    WAIT IDLE, 1 CYCLES;
    DRSCAN 32, $00000000, CAPTURE BUFF32[];
    EXPORT "SILSIG", BUFF32[];
    IRSCAN 8, $84, CAPTURE BUFF128[7..0];
    IF ( ! (BUFF128[2]==1) ) THEN GOTO CORE_NOT_ENABLED;
    PRINT "FPGA Array is programmed and enabled.";
    CORE_NOT_ENABLED:
    IF ( ! (BUFF128[2]==0) ) THEN GOTO CORE_ENABLED;
    PRINT "FPGA Array is not enabled.";
    CORE_ENABLED:
    CALL READ_UROW;
    CALL DISPLAY_UROW;
    FADDR[] = $0;
    CALL READ_F_ROW;
    EXPORT "FSN", BUFF128[55..8];
    PRINT "=========================================";
ENDPROC;

PROCEDURE INIT_AES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $dd;
    DRSCAN 128, $00000000000000000000000000000000;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 165 USEC;
ENDPROC;

PROCEDURE DO_VERIFY_DEVICE_INFO USES GV,BITSTREAM,DO_EXIT,DO_READ_SECURITY,READ_UROW
    ,DISP_CHKSUM_DESIGN;
    CALL READ_UROW;
    CALL DISP_CHKSUM_DESIGN;
    CALL DO_READ_SECURITY;
    BUFF32[31..0] = BOOL(CHECKSUM);
    UROW[127..112] = BUFF32[15..0];
    UROW[101..32] = ACT_UROW_DESIGN_NAME[69..0];
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a8;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 165 USEC;
    DRSCAN 128, $00000000000000000000000000000000,COMPARE UROW[],$ffff003fffffffffffffffff00000000
        ,PASS;
    IF ( ! (PASS==0) ) THEN GOTO UROW_CMP_OK;
    STATUS = -43;
    PRINT "Failed to verify design information.";
    UNIQUEEXITCODE = 32772;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    UROW_CMP_OK:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE READ_IDCODE_ONLY USES GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $0f;
    WAIT IDLE, 1 CYCLES;
    DRSCAN 32, $00000000, CAPTURE ID[];
    EXPORT "IDCODE", ID[];
ENDPROC;

PROCEDURE VERIFY_RLOCK USES GV;
    IRSCAN 8, $84,COMPARE $04,$04,PASS;
ENDPROC;

PROCEDURE DO_VERIFY_PGM_RLOCK USES GV,DO_EXIT,VERIFY_RLOCK;
    CALL VERIFY_RLOCK;
    IF ( ! (PASS==0) ) THEN GOTO RLOCK_PGM_PASS;
    STATUS = 10;
    PRINT "Failed to enable FPGA Array.";
    UNIQUEEXITCODE = 32891;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    RLOCK_PGM_PASS:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_VERIFY_DISABLE_RLOCK USES GV,DO_EXIT,VERIFY_RLOCK;
    CALL VERIFY_RLOCK;
    IF ( ! (PASS==1) ) THEN GOTO RLOCK_PGM_FAIL;
    STATUS = 10;
    PRINT "Failed to disable FPGA Array.";
    UNIQUEEXITCODE = 32918;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    RLOCK_PGM_FAIL:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_VERIFY_RLOCK USES GV,DO_EXIT,VERIFY_RLOCK;
    CALL VERIFY_RLOCK;
    IF ( ! (PASS==0) ) THEN GOTO RLOCK_VERIFY_PASS;
    STATUS = 11;
    PRINT "FPGA Array is not enabled.";
    UNIQUEEXITCODE = 32892;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    RLOCK_VERIFY_PASS:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE VERIFY_IDCODE USES GV,PARAMETERS,DO_EXIT;
    FREQUENCY (FREQ*1000000);
    WAIT RESET, 5 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $0f;
    DRSCAN 32, $00000000;
    WAIT IDLE, 1 CYCLES;
    DRSCAN 32, $00000000, CAPTURE ID[],COMPARE IDCODEVALUE[],IDMASK[],PASS;
    IF ( ! (PASS==0) ) THEN GOTO IDOK;
    STATUS = 6;
    PRINT "Failed to verify IDCODE";
    UNIQUEEXITCODE = 32797;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    IDOK:
    IDREV = INT(ID[31..28]);
    IDFAB = INT(ID[24..24]);
ENDPROC;

PROCEDURE IS_SECOK USES GV,DO_EXIT;
    IF ( ! (SECKEY_OK==0) ) THEN GOTO SECOK;
    STATUS = -35;
    PRINT "Failed to match pass key.";
    UNIQUEEXITCODE = 32799;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    SECOK:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_CHECK_R USES GV,DO_EXIT,DO_READ_SECURITY;
    CALL DO_READ_SECURITY;
    IF ( ! (ULARE==1) ) THEN GOTO ARRAYEPR;
    STATUS = -33;
    PRINT "FPGA Array Encryption is enforced. Plain text verification is prohibited.";
    UNIQUEEXITCODE = 32800;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    ARRAYEPR:
    IF ( ! (ULARD==1) ) THEN GOTO SKIPRCHK1;
    STATUS = -30;
    PRINT "FPGA Array Verification is protected by pass key.";
    PRINT "A valid pass key needs to be provided.";
    UNIQUEEXITCODE = 32804;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    SKIPRCHK1:
    IF ( ! (ULARD==0) ) THEN GOTO Label_64;
    CHKSEC = 0;
    Label_64:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_CHECK_W USES GV,DO_EXIT,DO_READ_SECURITY;
    CALL DO_READ_SECURITY;
    IF ( ! (ULAWE==1) ) THEN GOTO ARRAYWP;
    STATUS = -28;
    PRINT "FPGA Array Write/Erase is protected by pass key.";
    PRINT "A valid pass key needs to be provided.";
    UNIQUEEXITCODE = 32805;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    ARRAYWP:
    IF ( ! (ULARD==1) ) THEN GOTO ARRAYRPW;
    STATUS = -30;
    PRINT "FPGA Array Verification is protected by pass key.";
    PRINT "A valid pass key needs to be provided.";
    UNIQUEEXITCODE = 32806;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    ARRAYRPW:
    IF ( ! (ULARE==1) ) THEN GOTO ARRAYEPW;
    STATUS = -33;
    PRINT "FPGA Array Encryption is enforced. Plain text programming is prohibited.";
    CALL DO_EXIT;
    ARRAYEPW:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE BP_VER USES GV;
    BOOLEAN PLAYER_VERSION_BOOLEAN[32];
    PLAYER_VERSION_BOOLEAN[31..0] = BOOL(PLAYERVERSIONVARIABLE);
    INTEGER PLAYER_MAJOR_VERSION =(INT(PLAYER_VERSION_BOOLEAN[23..16])-SCULPTORMAJORBASE);
    INTEGER PLAYER_MINOR_VERSION =(INT(PLAYER_VERSION_BOOLEAN[15..8])-SCULPTORMINORBASE);
    ACT_UROW_SW_VERSION[6..5] = BOOL(PLAYER_MAJOR_VERSION);
    ACT_UROW_SW_VERSION[4..1] = BOOL(PLAYER_MINOR_VERSION);
    ACT_UROW_SW_VERSION[0] = PLAYER_VERSION_BOOLEAN[0];
    ACT_UROW_PROGRAM_SW[3..0] = BOOL(PLAYERVERSIONSWVARIABLE);
ENDPROC;

PROCEDURE POLL_PROGRAM USES GV;
    INTEGER ILOOP_0;
    FOR ILOOP_0 = 16381 - 1 TO 0 STEP -1;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $84;
        WAIT IDLE, 1 CYCLES;
        WAIT IDLE, 100 USEC;
        DRSCAN 5, $00,COMPARE $00,$0b,PASS;
        IF PASS THEN ILOOP_0 = 0;
    NEXT ILOOP_0;
ENDPROC;

PROCEDURE SET_PRG_ARRAY USES GV;
    ISPRGARRAY = 1;
ENDPROC;

PROCEDURE DO_INITIALIZE USES GV,DO_EXIT,READ_F_ROW,DO_CHECK_R,DO_CHECK_W,BP_VER;
    BSR[350..0] = BSRPATTERN[350..0];
    BOOLEAN SHIFT_DATA[351];
    IRSCAN 8, $01;
    DRSCAN 351, BSR[];
    WAIT IDLE, 1 CYCLES;
    DRSCAN 351, SHIFT_DATA[], CAPTURE SAMPLE_DEVICE[];
    FOR I = 0 TO 350;
        IF ( ! (SAMPLEMASK[I]==1) ) THEN GOTO Label_65;
        BSR[I] = SAMPLE_DEVICE[I];
        Label_65:
        LABEL_SEPARATOR = 0;
    NEXT I;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $01;
    DRSCAN 351, BSR[];
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $80;
    DRSCAN 18, $00000;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 1875 USEC;
    DRSCAN 18, $00000, CAPTURE ISC_CONFIG_RESULT[],COMPARE $30000,$30000,PASS;
    IF ( ! (PASS==0) ) THEN GOTO CRCOK;
    STATUS = 5;
    PRINT "Failed to enter programming mode.";
    EXPORT "ISC_Config_Result", ISC_CONFIG_RESULT[];
    UNIQUEEXITCODE = 32850;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    CRCOK:
    FADDR[] = $0;
    CALL READ_F_ROW;
    EXPORT "FSN", BUFF128[55..8];
    IF ( ! (CHKARRAY==1) ) THEN GOTO SKIPCHKARRAY;
    IF ( ! (ARRAYRONLY==0) ) THEN GOTO Label_66;
    CALL DO_CHECK_W;
    Label_66:
    IF ( ! (ARRAYRONLY==1) ) THEN GOTO Label_67;
    CALL DO_CHECK_R;
    Label_67:
    LABEL_SEPARATOR = 0;
    SKIPCHKARRAY:
    IF ( ! (PLAYERVERSIONVARIABLE!=0) ) THEN GOTO Label_68;
    CALL BP_VER;
    Label_68:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE READ_INITIALIZE USES GV,DO_INITIALIZE;
    CHKFROM = 0;
    CHKARRAY = 0;
    CHKNVM = 0;
    CHKSEC = 0;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE NW_INITIALIZE_COMMON USES GV;
    CHKFROM = 0;
    CHKARRAY = 0;
ENDPROC;

PROCEDURE NW_INITIALIZE USES DO_INITIALIZE,NW_INITIALIZE_COMMON;
    CALL NW_INITIALIZE_COMMON;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE NR_INITIALIZE_COMMON USES GV;
    CHKFROM = 0;
    CHKARRAY = 0;
ENDPROC;

PROCEDURE NR_INITIALIZE USES DO_INITIALIZE,NR_INITIALIZE_COMMON;
    CALL NR_INITIALIZE_COMMON;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE AW_INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 0;
    CHKFROM = 0;
    CHKARRAY = 1;
    CHKNVM = 0;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE AR_INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 1;
    CHKFROM = 0;
    CHKARRAY = 1;
    CHKNVM = 0;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE W_INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 0;
    CHKARRAY = 1;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE R_INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 1;
    CHKARRAY = 1;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 0;
    FROMRONLY = 0;
    CHKFROM = 1;
    CHKARRAY = 1;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE POLL_ERASE USES GV;
    PASS = 0;
    INTEGER ILOOP_1;
    FOR ILOOP_1 = 262141 - 1 TO 0 STEP -1;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $84;
        WAIT IDLE, 1 CYCLES;
        WAIT IDLE, 1000 USEC;
        DRSCAN 5, $00,COMPARE $00,$03,PASS;
        IF PASS THEN ILOOP_1 = 0;
    NEXT ILOOP_1;
ENDPROC;

PROCEDURE UFROM_DISTURB USES GV;
    FOR FROMROWNUMBER = NUMBEROFFROMROWS TO 1 STEP -1;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $9f;
        DRSCAN 3, BOOL((FROMROWNUMBER-1));
        WAIT IDLE, 1 CYCLES;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $9b;
        DRSCAN 128, $ffffffffffffffffffffffffffffffff;
        WAIT IDLE, 5 CYCLES;
        WAIT IDLE, 10000 USEC;
    NEXT FROMROWNUMBER;
ENDPROC;

PROCEDURE PROGRAM_UROW USES GV,BITSTREAM,DO_EXIT,POLL_PROGRAM;
    IF ( ! (ISERASEONLY==0) ) THEN GOTO SKIP_CYC_INCREMENT;
    IF ( ! (ISPRGARRAY==1) ) THEN GOTO NOT_PGM_ARRAY;
    IF ( ! ( ( ( (INT(UROW[31..0])==-1)&&(INT(UROW[63..32])==-1))&&(INT(UROW[95..64])==-1))&&(INT(UROW[127..96])==-1)) ) THEN GOTO NOT_CORRUPTED_CYCLE_COUNT;
    ACT_UROW_CYCLE_COUNT = 0;
    NOT_CORRUPTED_CYCLE_COUNT:
    IF ( ! (ACT_UROW_CYCLE_COUNT<1000) ) THEN GOTO MAX_CYCLE_COUNT;
    ACT_UROW_CYCLE_COUNT = (ACT_UROW_CYCLE_COUNT+1);
    MAX_CYCLE_COUNT:
    LABEL_SEPARATOR = 0;
    NOT_PGM_ARRAY:
    LABEL_SEPARATOR = 0;
    SKIP_CYC_INCREMENT:
    IF ( ! (ISERASEONLY==1) ) THEN GOTO Label_69;
    UROW[] = $ffffffffffffffffffffffffffffffff;
    Label_69:
    IF ( ! ( (ISERASEONLY==0)||(ISRESTOREDESIGN==1)) ) THEN GOTO SKIP_DESIGN_INFO;
    BUFF32[31..0] = BOOL(CHECKSUM);
    IF ( ! ( !ISRESTOREDESIGN) ) THEN GOTO Label_70;
    UROW[127..112] = BUFF32[15..0];
    Label_70:
    IF ( ! ISRESTOREDESIGN ) THEN GOTO Label_71;
    UROW[127..112] = SUROWCHECKSUM[15..0];
    Label_71:
    IF ( ! ( !ISRESTOREDESIGN) ) THEN GOTO Label_72;
    UROW[101..32] = ACT_UROW_DESIGN_NAME[69..0];
    Label_72:
    IF ( ! ISRESTOREDESIGN ) THEN GOTO Label_73;
    UROW[101..32] = SUROWDESIGNNAME[69..0];
    Label_73:
    LABEL_SEPARATOR = 0;
    SKIP_DESIGN_INFO:
    BUFF32[31..0] = BOOL(ACT_UROW_CYCLE_COUNT);
    UROW[111..102] = BUFF32[9..0];
    UROW[31..29] = ACT_UROW_PROG_METHOD[2..0];
    UROW[28..25] = ACT_UROW_ALGO_VERSION[3..0];
    UROW[16..10] = ACT_UROW_SW_VERSION[6..0];
    UROW[9..6] = ACT_UROW_PROGRAM_SW[3..0];
    UROW[4] = SUROW_SRAM_DISTURB[0];
    IF ( ! (ACT_UROW_ALGO_VERSION[6]==1) ) THEN GOTO Label_74;
    UROW[5] = 1;
    UROW[0] = 0;
    UROW[24..23] = ACT_UROW_ALGO_VERSION[5..4];
    Label_74:
    IF ( ! (ACT_UROW_ALGO_VERSION[6]==0) ) THEN GOTO Label_75;
    UROW[5] = 0;
    UROW[0] = 1;
    UROW[24..23] = ACT_UROW_ALGO_VERSION[5..4];
    Label_75:
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a7;
    DRSCAN 128, UROW[];
    WAIT IDLE, 15 CYCLES;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO PROGRAM_OK3;
    STATUS = -24;
    PRINT "Failed to program UROW";
    UNIQUEEXITCODE = 32853;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    PROGRAM_OK3:
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a8;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 165 USEC;
    DRSCAN 128, $00000000000000000000000000000000,COMPARE UROW[],UROW_MASK[],PASS;
    IF ( ! (PASS==0) ) THEN GOTO UROW_OK;
    STATUS = -24;
    PRINT "Failed to program UROW";
    UNIQUEEXITCODE = 32854;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    UROW_OK:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE FAIL_ERASE USES GV,DO_EXIT;
    STATUS = 8;
    PRINT "Failed Erase Operation";
    UNIQUEEXITCODE = 32855;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
ENDPROC;

PROCEDURE EXE_ERASE USES BITSTREAM,GV,READ_UROW,POLL_ERASE,PROGRAM_UROW,FAIL_ERASE;
    IF ( ! (COMBERASESELECT[14]==1) ) THEN GOTO SKIPRUROW;
    CALL READ_UROW;
    EXPORT "ACTEL_SLOG_UROW", UROW[];
    SKIPRUROW:
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $85;
    DRSCAN 23, COMBERASESELECT[];
    WAIT IDLE, 3 CYCLES;
    CALL POLL_ERASE;
    IF ( ! (PASS==0) ) THEN GOTO ERASEOK;
    CALL FAIL_ERASE;
    ERASEOK:
    IF ( ! (COMBERASESELECT[14]==1) ) THEN GOTO Label_76;
    CALL PROGRAM_UROW;
    Label_76:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_ERASE USES BITSTREAM,GV,EXE_ERASE;
    PRINT "Erase ...";
    COMBERASESELECT[22..0] = $004000;
    COMBERASESELECT[0] = 1;
    CALL EXE_ERASE;
    PRINT "Completed erase";
    IF ( ! (ISPRGARRAY==1) ) THEN GOTO NOT_PGM_ARRAY_ERASE;
    BUFF32[31..0] = BOOL(CHECKSUM);
    EXPORT "CHECKSUM", BUFF32[15..0];
    NOT_PGM_ARRAY_ERASE:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_ERASE_ARRAY USES GV,EXE_ERASE;
    PRINT "Erase FPGA Array ...";
    COMBERASESELECT[22..0] = $004001;
    CALL EXE_ERASE;
ENDPROC;

PROCEDURE DO_ERASE_ONLY USES GV,DO_ERASE;
    ISERASEONLY = 1;
    CALL DO_ERASE;
ENDPROC;

PROCEDURE DO_ERASE_ARRAY_ONLY USES GV,DO_ERASE_ARRAY;
    ISERASEONLY = 1;
    CALL DO_ERASE_ARRAY;
ENDPROC;

PROCEDURE DO_ERASE_ALL USES GV,UFROM_DISTURB,EXE_ERASE;
    IF ( ! ( (BM7DEVICE==1)||(BM1DEVICE==1)) ) THEN GOTO Label_77;
    PRINT "Erase FPGA Array and FlashROM ...";
    Label_77:
    IF ( ! ( (BM7DEVICE!=1)&&(BM1DEVICE!=1)) ) THEN GOTO Label_78;
    PRINT "Erase FPGA Array, FlashROM and Security Settings ...";
    Label_78:
    COMBERASESELECT[22..0] = $7fc00f;
    ISERASEONLY = 1;
    CALL EXE_ERASE;
    CALL UFROM_DISTURB;
ENDPROC;

PROCEDURE LOAD_ROW_DATA USES BITSTREAM,GV;
    FOR SDTILE = 1 TO NUMBEROFSDTILES;
        FOR I = 1 TO 8;
            IRSTOP IRPAUSE;
            DRSTOP DRPAUSE;
            IRSCAN 8, $89;
            DRSCAN 26, DATASTREAM[(DATAINDEX+25)..DATAINDEX];
            WAIT IDLE, 3 CYCLES;
            DATAINDEX = (DATAINDEX+26);
        NEXT I;
    NEXT SDTILE;
ENDPROC;

PROCEDURE EXE_PROGRAM USES GV,DO_EXIT,POLL_PROGRAM;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $83;
    WAIT IDLE, 3 CYCLES;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO Label_79;
    STATUS = 10;
    PRINT "Failed to program FPGA array at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32856;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_79:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE EXE_VERIFY USES GV,DO_EXIT,POLL_PROGRAM;
    IF ( ! (VERIFYEOL[0]==0) ) THEN GOTO VERIFY_EOL_0;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $8d;
    DRSCAN 2, VERIFYEOL[];
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 132 USEC;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO Label_80;
    STATUS = 11;
    PRINT "Verify 0 failed at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32857;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_80:
    IRSCAN 8, $8d;
    DRSCAN 2, VERIFYEOL[],COMPARE $0,$3,PASS;
    VERIFY_EOL_0:
    IF ( ! (VERIFYEOL[0]==1) ) THEN GOTO VERIFY_BOL_0;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $8d;
    DRSCAN 2, VERIFYEOL[];
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 1250 USEC;
    DRSCAN 2, $0,COMPARE $0,$3,PASS;
    VERIFY_BOL_0:
    IF ( ! (PASS==0) ) THEN GOTO Label_81;
    STATUS = 11;
    PRINT "Verify 0 failed at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32858;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_81:
    IF ( ! (VERIFYEOL[0]==0) ) THEN GOTO VERIFY_EOL_1;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $8e;
    DRSCAN 2, VERIFYEOL[];
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 132 USEC;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO Label_82;
    STATUS = 11;
    PRINT "Verify 1 failed at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32859;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_82:
    IRSCAN 8, $8e;
    DRSCAN 2, VERIFYEOL[],COMPARE $0,$3,PASS;
    VERIFY_EOL_1:
    IF ( ! (VERIFYEOL[0]==1) ) THEN GOTO VERIFY_BOL_1;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $8e;
    DRSCAN 2, VERIFYEOL[];
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 1250 USEC;
    DRSCAN 2, $0,COMPARE $0,$3,PASS;
    VERIFY_BOL_1:
    IF ( ! (PASS==0) ) THEN GOTO Label_83;
    STATUS = 11;
    PRINT "Verify 1 failed at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32860;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_83:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_PROGRAM USES GV,LOAD_ROW_DATA,EXE_PROGRAM;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $87;
    DRSCAN 2, $2;
    WAIT IDLE, 3 CYCLES;
    PRINT "Programming FPGA Array";
    DATAINDEX = 0;
    ROWNUMBER = (NUMBEROFMAPROWS-1);
    INTEGER IREPEAT_0;
    FOR IREPEAT_0 = NUMBEROFMAPROWS - 1 TO 0 STEP -1;
        CALL LOAD_ROW_DATA;
        CALL EXE_PROGRAM;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $87;
        DRSCAN 2, $3;
        WAIT IDLE, 3 CYCLES;
        IF ( ! ((ROWNUMBER%ROWITERATION)==0) ) THEN GOTO Label_84;
        PERCENT_UPDATE = ((100*((NUMBEROFMAPROWS-ROWNUMBER)+1))/NUMBEROFMAPROWS);
        DIFFERENCE = (PERCENT_UPDATE%10);
        IF ( ! (DIFFERENCE>=5) ) THEN GOTO ROUND_DOWN_PGM_A;
        PERCENT_UPDATE = (PERCENT_UPDATE+(10-DIFFERENCE));
        ROUND_DOWN_PGM_A:
        IF ( ! (DIFFERENCE<5) ) THEN GOTO ROUND_UP_PGM_A;
        PERCENT_UPDATE = (PERCENT_UPDATE-DIFFERENCE);
        ROUND_UP_PGM_A:
        EXPORT "PERCENT_DONE", PERCENT_UPDATE;
        Label_84:
        ROWNUMBER = (ROWNUMBER-1);
    NEXT IREPEAT_0;
ENDPROC;

PROCEDURE DO_VERIFY USES GV,LOAD_ROW_DATA,EXE_VERIFY;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $87;
    DRSCAN 2, $2;
    WAIT IDLE, 3 CYCLES;
    PRINT "Verifying FPGA Array";
    DATAINDEX = 0;
    ROWNUMBER = (NUMBEROFMAPROWS-1);
    INTEGER IREPEAT_1;
    FOR IREPEAT_1 = NUMBEROFMAPROWS - 1 TO 0 STEP -1;
        CALL LOAD_ROW_DATA;
        CALL EXE_VERIFY;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $87;
        DRSCAN 2, $3;
        WAIT IDLE, 3 CYCLES;
        IF ( ! ((ROWNUMBER%ROWITERATION)==0) ) THEN GOTO Label_85;
        PERCENT_UPDATE = ((100*((NUMBEROFMAPROWS-ROWNUMBER)+1))/NUMBEROFMAPROWS);
        DIFFERENCE = (PERCENT_UPDATE%10);
        IF ( ! (DIFFERENCE>=5) ) THEN GOTO ROUND_DOWN_VER_ARRAY;
        PERCENT_UPDATE = (PERCENT_UPDATE+(10-DIFFERENCE));
        ROUND_DOWN_VER_ARRAY:
        IF ( ! (DIFFERENCE<5) ) THEN GOTO ROUND_UP_VER_ARRAY;
        PERCENT_UPDATE = (PERCENT_UPDATE-DIFFERENCE);
        ROUND_UP_VER_ARRAY:
        EXPORT "PERCENT_DONE", PERCENT_UPDATE;
        Label_85:
        ROWNUMBER = (ROWNUMBER-1);
    NEXT IREPEAT_1;
    PRINT "        Verifying FPGA Array -- pass";
ENDPROC;

PROCEDURE DO_VERIFY_BOL USES GV,DO_VERIFY;
    VERIFYEOL[0] = 0;
    CALL DO_VERIFY;
ENDPROC;

PROCEDURE DO_VERIFY_EOL USES GV,DO_VERIFY;
    VERIFYEOL[0] = 1;
    CALL DO_VERIFY;
ENDPROC;

PROCEDURE DO_PROGRAM_RLOCK USES GV,DO_EXIT,POLL_PROGRAM;
    DATAINDEX = 0;
    INTEGER IREPEAT_2;
    FOR IREPEAT_2 = NUMBEROFSDTILES - 1 TO 0 STEP -1;
        FOR I = 1 TO 8;
            IRSTOP IRPAUSE;
            DRSTOP DRPAUSE;
            IRSCAN 8, $89;
            DRSCAN 26, RLOCK[(DATAINDEX+25)..DATAINDEX];
            WAIT IDLE, 3 CYCLES;
            DATAINDEX = (DATAINDEX+26);
        NEXT I;
    NEXT IREPEAT_2;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $8c;
    WAIT IDLE, 3 CYCLES;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO Label_86;
    STATUS = 10;
    PRINT "Failed to enable FPGA Array.";
    UNIQUEEXITCODE = 32862;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_86:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_DISABLE_RLOCK USES GV,DO_EXIT,POLL_PROGRAM;
    DATAINDEX = 0;
    INTEGER IREPEAT_3;
    FOR IREPEAT_3 = NUMBEROFSDTILES - 1 TO 0 STEP -1;
        FOR I = 1 TO 8;
            IRSTOP IRPAUSE;
            DRSTOP DRPAUSE;
            IRSCAN 8, $89;
            DRSCAN 26, $0000000;
            WAIT IDLE, 3 CYCLES;
            DATAINDEX = (DATAINDEX+26);
        NEXT I;
    NEXT IREPEAT_3;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $8c;
    WAIT IDLE, 3 CYCLES;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO FABRIC_ENABLED;
    STATUS = 10;
    PRINT "Failed to disable FPGA Array.";
    UNIQUEEXITCODE = 32917;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    FABRIC_ENABLED:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DISABLE_RLOCK_AND_VERIFY USES DO_VERIFY_DISABLE_RLOCK,DO_DISABLE_RLOCK;
    CALL DO_DISABLE_RLOCK;
    CALL DO_VERIFY_DISABLE_RLOCK;
ENDPROC;

PROCEDURE DO_READ_IDCODE USES READ_IDCODE_ONLY;
    WAIT RESET, 5 CYCLES;
    CALL READ_IDCODE_ONLY;
    EXIT 0;
ENDPROC;


CRC 605E;
